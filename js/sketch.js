// Generated by CoffeeScript 2.5.1
var Digits, update,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  r4r,
  signal,
  range,
  br,
  div,
  input,
  button
} from '../js/utils.js';

ass([], [7, 8].slice(0, 0));

ass([7], [7, 8].slice(0, 1));

ass([8], [7, 8].slice(1, 2));

ass([7, 8], [7, 8].slice(0, 2));

update = (lst, i, j, c) => {
  var lst1, lst2, lst3;
  lst1 = lst.slice(0, i);
  lst2 = lst1.concat(lst.slice(i + 1, j));
  lst3 = lst2.concat(lst.slice(j + 1));
  lst3 = lst3.concat([c]);
  ass(lst3.length, lst.length - 1);
  return lst3;
};

ass([13, 23], update([11, 12, 13], 0, 1, 23));

ass([11, 25], update([11, 12, 13], 1, 2, 25));

ass([12, 24], update([11, 12, 13], 0, 2, 24));

ass([13, 14, 23], update([11, 12, 13, 14], 0, 1, 23));

ass([12, 14, 24], update([11, 12, 13, 14], 0, 2, 24));

ass([12, 13, 25], update([11, 12, 13, 14], 0, 3, 25));

ass([11, 14, 25], update([11, 12, 13, 14], 1, 2, 25));

ass([11, 13, 26], update([11, 12, 13, 14], 1, 3, 26));

ass([11, 12, 27], update([11, 12, 13, 14], 2, 3, 27));

ass([15, 55, 150], update([15, 25, 6, 55], 1, 2, 150));

Digits = (target, numbers) => {
  var click, n, setSolutions, solutions, solve, t;
  [solutions, setSolutions] = signal([]);
  click = (t, n) => {
    return solve(parseInt(t.value), n.value.split(' ').map((x) => {
      return parseInt(x);
    }));
  };
  solve = (target, numbers) => {
    var k, len, level, ref, solution, solve1, start;
    solution = "0123456789";
    solve1 = (target, lst, level, lines) => {
      var a, b, c, i, j, k, len, lines1, lst3, n, op, ref, results;
      if (level === 0) {
        return;
      }
      n = lst.length;
      ref = range(n - 1);
      results = [];
      for (k = 0, len = ref.length; k < len; k++) {
        i = ref[k];
        results.push((function() {
          var l, len1, ref1, results1;
          ref1 = range(i + 1, n);
          results1 = [];
          for (l = 0, len1 = ref1.length; l < len1; l++) {
            j = ref1[l];
            a = lst[i];
            b = lst[j];
            if (a < b) {
              [a, b] = [b, a];
            }
            results1.push((function() {
              var len2, m, ref2, results2;
              ref2 = "*+-/";
              results2 = [];
              for (m = 0, len2 = ref2.length; m < len2; m++) {
                op = ref2[m];
                c = 0;
                if (op === '+') {
                  c = a + b;
                }
                if (op === '-') {
                  c = a - b;
                }
                if (b !== 1) {
                  if (op === '*') {
                    c = a * b;
                  }
                  if (op === '/' && modulo(a, b) === 0) {
                    c = Math.floor(a / b);
                  }
                }
                if (c > 0) {
                  lines1 = lines.concat([`${a} ${op} ${b} = ${c}`]);
                  lst3 = update(lst, i, j, c);
                  if (c === target) {
                    if (solution.length > lines1.length) {
                      results2.push(solution = lines1);
                    } else {
                      results2.push(void 0);
                    }
                  } else {
                    results2.push(solve1(target, lst3, level - 1, lines1));
                  }
                } else {
                  results2.push(void 0);
                }
              }
              return results2;
            })());
          }
          return results1;
        })());
      }
      return results;
    };
    start = new Date();
    if (numbers.length > 6) {
      solution = ["Maximum six numbers"];
    } else {
      ref = range(2, 6);
      for (k = 0, len = ref.length; k < len; k++) {
        level = ref[k];
        solve1(target, numbers, level, []);
        if (solution.length !== 10) {
          break;
        }
      }
      if (solution.length === 10) {
        solution = ["No solution"];
      }
    }
    setSolutions(solution);
    return console.log(new Date() - start);
  };
  return div({}, div({}, n = input({
    size: 13,
    value: numbers
  }), t = input({
    size: 3,
    value: target
  }), button({
    onclick: () => {
      return click(t, n);
    }
  }, "solve")), () => {
    var k, len, ref, results, sol;
    ref = solutions();
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      sol = ref[k];
      results.push(div({}, sol));
    }
    return results;
  }, br({}));
};

r4r(() => {
  return div({
    style: "text-align:center;font-size:2em"
  }, Digits(9, '1 2 3'), Digits(133, '4 5 8 11 15 20'), Digits(218, '4 5 7 9 11 20'), Digits(388, '3 5 9 20 23 25'), Digits(462, '3 5 9 10 20 25'));
});

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-020-NYT-Digits\coffee\sketch.coffee